plugins {
    id 'java'
    id 'application'
    id 'jacoco'
    id 'se.thinkcode.cucumber-runner' version '0.0.8'
}

repositories {
    jcenter()
    mavenCentral()
}

project.ext {
    cucumberVersion = '6.8.1'
    junitVersion = '4.13'
}

dependencies {
    testImplementation(platform('org.junit:junit-bom:5.7.0'))
    testImplementation('org.junit.jupiter:junit-jupiter')
    
    testCompile 'io.cucumber:cucumber-java:' + cucumberVersion
    testCompile 'io.cucumber:cucumber-junit:' + cucumberVersion
    testCompile 'junit:junit:' + junitVersion
    
    compile group: 'org.javatuples', name: 'javatuples', version: '1.2'
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.32.3.2'
    compile group: 'org.reflections', name: 'reflections', version: '0.9.12'
    compile group: 'org.jline', name: 'jline', version: '3.17.1'
    compile group: 'org.jline', name: 'jline-terminal-jansi', version: '3.17.1'
}

application {
    mainClass = 'ohtu.Main'
}

test {
    testLogging {
      showStandardStreams = true
      exceptionFormat = 'full'
    }

    systemProperties System.getProperties()
    useJUnitPlatform()
}

cucumber {
  glue = 'classpath:ohtu'
  plugin = ['pretty']
}

run {
    standardInput = System.in
}

javadoc {
    options.memberLevel = JavadocMemberLevel.PRIVATE
}

jar {
    manifest {
        attributes 'Main-Class': 'ohtu.Main'
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

jacocoTestReport {
    reports {
	xml.enabled true
	html.enabled true
    }
   afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: 'ohtu/Main.*')
        }))
    }
}
